rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['Admin']);
    }

    function isModerator() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['Admin', 'Mod']);
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || request.auth.uid == userId;

      match /creditHistory/{historyId} {
        allow read: if request.auth != null && (
          request.auth.uid == userId || isAdmin()
        );
        allow write: if isAdmin();
      }
    }
    
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || isModerator();
    }
  }
} 